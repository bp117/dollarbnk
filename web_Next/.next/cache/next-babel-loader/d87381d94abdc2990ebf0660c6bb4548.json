{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport SingleModuleButton from 'components/UI/Buttons/SingleModuleButton';\n\nconst InnerForm = props => {\n  const {\n    errors,\n    touched\n  } = props;\n  return __jsx(Form, null, __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"daily-online-limit\"\n  }, \"Enter new daily online limit\"), __jsx(Field, {\n    type: \"text\",\n    id: \"daily-online-limit\",\n    className: \"form-control\",\n    name: \"dailyOnlineLimit\",\n    placeholder: \"New daily online limit...\"\n  }), touched.dailyOnlineLimit && errors.dailyOnlineLimit && __jsx(\"p\", null, errors.dailyOnlineLimit)), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"daily-withdrawal-limit\"\n  }, \"Enter new daily withdrawal limit\"), __jsx(Field, {\n    type: \"text\",\n    id: \"daily-withdrawal-limit\",\n    className: \"form-control\",\n    name: \"dailyWithdrawalLimit\",\n    placeholder: \"New daily withdrawal limit...\"\n  }), touched.dailyWithdrawalLimit && errors.dailyWithdrawalLimit && __jsx(\"p\", null, errors.dailyWithdrawalLimit)), __jsx(\"p\", {\n    className: \"validation-info\"\n  }, props.status)), __jsx(SingleModuleButton, {\n    text: \"Change limits\",\n    type: \"submit\"\n  }));\n};\n\nconst LimitsChangeForm = withFormik({\n  // Transform outer props into form values\n  mapPropsToValues: props => ({\n    dailyOnlineLimit: props.currentOnlineLimit,\n    dailyWithdrawalLimit: props.currentWithdrawalLimit\n  }),\n  validationSchema: Yup.object().shape({\n    dailyWithdrawalLimit: Yup.number().typeError('It must be a number').positive('Please enter a positive number'),\n    dailyOnlineLimit: Yup.number().typeError('It must be a number').positive('Please enter a positive number')\n  }),\n  // Submission handler\n  handleSubmit: (values, {\n    props,\n    setStatus\n  }) => {\n    const {\n      dailyOnlineLimit,\n      dailyWithdrawalLimit\n    } = values;\n\n    if (!dailyOnlineLimit && !dailyWithdrawalLimit) {\n      setStatus('No limits changed');\n      return;\n    }\n\n    setStatus('Sending...');\n    props.changeCardLimits(dailyOnlineLimit, dailyWithdrawalLimit).then(data => setStatus('Limits successfully changed!')).catch(error => setStatus('Problems, try again...'));\n  }\n})(InnerForm);\nexport default LimitsChangeForm;","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/Cards/LimitsChange/Form.js"],"names":["React","Form","Field","withFormik","Yup","SingleModuleButton","InnerForm","props","errors","touched","dailyOnlineLimit","dailyWithdrawalLimit","status","LimitsChangeForm","mapPropsToValues","currentOnlineLimit","currentWithdrawalLimit","validationSchema","object","shape","number","typeError","positive","handleSubmit","values","setStatus","changeCardLimits","then","data","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBF,KAA5B;AAEA,SACG,MAAC,IAAD,QACG,mBACG;AAAK,IAAA,SAAS,EAAC;AAAf,KACG;AAAO,IAAA,OAAO,EAAC;AAAf,oCADH,EAGG,MAAC,KAAD;AACG,IAAA,IAAI,EAAC,MADR;AAEG,IAAA,EAAE,EAAC,oBAFN;AAGG,IAAA,SAAS,EAAC,cAHb;AAIG,IAAA,IAAI,EAAC,kBAJR;AAKG,IAAA,WAAW,EAAC;AALf,IAHH,EAUIE,OAAO,CAACC,gBAAR,IAA4BF,MAAM,CAACE,gBAAnC,IACE,iBAAIF,MAAM,CAACE,gBAAX,CAXN,CADH,EAgBG;AAAK,IAAA,SAAS,EAAC;AAAf,KACG;AAAO,IAAA,OAAO,EAAC;AAAf,wCADH,EAGG,MAAC,KAAD;AACG,IAAA,IAAI,EAAC,MADR;AAEG,IAAA,EAAE,EAAC,wBAFN;AAGG,IAAA,SAAS,EAAC,cAHb;AAIG,IAAA,IAAI,EAAC,sBAJR;AAKG,IAAA,WAAW,EAAC;AALf,IAHH,EAUID,OAAO,CAACE,oBAAR,IAAgCH,MAAM,CAACG,oBAAvC,IACE,iBAAIH,MAAM,CAACG,oBAAX,CAXN,CAhBH,EA+BG;AAAG,IAAA,SAAS,EAAC;AAAb,KAAgCJ,KAAK,CAACK,MAAtC,CA/BH,CADH,EAmCG,MAAC,kBAAD;AAAoB,IAAA,IAAI,EAAC,eAAzB;AAAyC,IAAA,IAAI,EAAC;AAA9C,IAnCH,CADH;AAuCF,CA1CD;;AA4CA,MAAMC,gBAAgB,GAAGV,UAAU,CAAC;AACjC;AACAW,EAAAA,gBAAgB,EAAEP,KAAK,KAAK;AACzBG,IAAAA,gBAAgB,EAAEH,KAAK,CAACQ,kBADC;AAEzBJ,IAAAA,oBAAoB,EAAEJ,KAAK,CAACS;AAFH,GAAL,CAFU;AAOjCC,EAAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AAClCR,IAAAA,oBAAoB,EAAEP,GAAG,CAACgB,MAAJ,GAClBC,SADkB,CACR,qBADQ,EAElBC,QAFkB,CAET,gCAFS,CADY;AAIlCZ,IAAAA,gBAAgB,EAAEN,GAAG,CAACgB,MAAJ,GACdC,SADc,CACJ,qBADI,EAEdC,QAFc,CAEL,gCAFK;AAJgB,GAAnB,CAPe;AAgBjC;AACAC,EAAAA,YAAY,EAAE,CAACC,MAAD,EAAS;AAAEjB,IAAAA,KAAF;AAASkB,IAAAA;AAAT,GAAT,KAAkC;AAC7C,UAAM;AAAEf,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAA6Ca,MAAnD;;AAEA,QAAI,CAACd,gBAAD,IAAqB,CAACC,oBAA1B,EAAgD;AAC7Cc,MAAAA,SAAS,CAAC,mBAAD,CAAT;AACA;AACF;;AAEDA,IAAAA,SAAS,CAAC,YAAD,CAAT;AAEAlB,IAAAA,KAAK,CACDmB,gBADJ,CACqBhB,gBADrB,EACuCC,oBADvC,EAEIgB,IAFJ,CAESC,IAAI,IAAIH,SAAS,CAAC,8BAAD,CAF1B,EAGII,KAHJ,CAGUC,KAAK,IAAIL,SAAS,CAAC,wBAAD,CAH5B;AAIF;AA/BgC,CAAD,CAAV,CAgCtBnB,SAhCsB,CAAzB;AAkCA,eAAeO,gBAAf","sourcesContent":["import React from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport SingleModuleButton from 'components/UI/Buttons/SingleModuleButton';\n\nconst InnerForm = props => {\n   const { errors, touched } = props;\n\n   return (\n      <Form>\n         <div>\n            <div className=\"form-group\">\n               <label htmlFor=\"daily-online-limit\">Enter new daily online limit</label>\n\n               <Field\n                  type=\"text\"\n                  id=\"daily-online-limit\"\n                  className=\"form-control\"\n                  name=\"dailyOnlineLimit\"\n                  placeholder=\"New daily online limit...\"\n               />\n               {touched.dailyOnlineLimit && errors.dailyOnlineLimit && (\n                  <p>{errors.dailyOnlineLimit}</p>\n               )}\n            </div>\n\n            <div className=\"form-group\">\n               <label htmlFor=\"daily-withdrawal-limit\">Enter new daily withdrawal limit</label>\n\n               <Field\n                  type=\"text\"\n                  id=\"daily-withdrawal-limit\"\n                  className=\"form-control\"\n                  name=\"dailyWithdrawalLimit\"\n                  placeholder=\"New daily withdrawal limit...\"\n               />\n               {touched.dailyWithdrawalLimit && errors.dailyWithdrawalLimit && (\n                  <p>{errors.dailyWithdrawalLimit}</p>\n               )}\n            </div>\n\n            <p className=\"validation-info\">{props.status}</p>\n         </div>\n\n         <SingleModuleButton text=\"Change limits\" type=\"submit\" />\n      </Form>\n   );\n};\n\nconst LimitsChangeForm = withFormik({\n   // Transform outer props into form values\n   mapPropsToValues: props => ({\n      dailyOnlineLimit: props.currentOnlineLimit,\n      dailyWithdrawalLimit: props.currentWithdrawalLimit\n   }),\n\n   validationSchema: Yup.object().shape({\n      dailyWithdrawalLimit: Yup.number()\n         .typeError('It must be a number')\n         .positive('Please enter a positive number'),\n      dailyOnlineLimit: Yup.number()\n         .typeError('It must be a number')\n         .positive('Please enter a positive number')\n   }),\n\n   // Submission handler\n   handleSubmit: (values, { props, setStatus }) => {\n      const { dailyOnlineLimit, dailyWithdrawalLimit } = values;\n\n      if (!dailyOnlineLimit && !dailyWithdrawalLimit) {\n         setStatus('No limits changed');\n         return;\n      }\n\n      setStatus('Sending...');\n\n      props\n         .changeCardLimits(dailyOnlineLimit, dailyWithdrawalLimit)\n         .then(data => setStatus('Limits successfully changed!'))\n         .catch(error => setStatus('Problems, try again...'));\n   }\n})(InnerForm);\n\nexport default LimitsChangeForm;\n"]},"metadata":{},"sourceType":"module"}