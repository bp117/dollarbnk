{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { getUsersCount } from 'api/common';\nimport PageContainer from 'hoc/PageContainer';\nimport Loader from 'components/UI/Loader';\nimport Header from 'components/Home/Header';\nimport Features from 'components/Home/Features';\nimport NewFeatures from 'components/Home/NewFeatures';\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      clientsCount: 0,\n      loaded: false\n    });\n  }\n\n  static async getInitialProps() {\n    const usersCount = await getUsersCount();\n    const {\n      data\n    } = usersCount || {};\n    return {\n      clientsCount: data,\n      loaded: true\n    };\n  }\n\n  render() {\n    return __jsx(PageContainer, null, !this.props.loaded ? __jsx(Loader, null) : __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(\"section\", {\n      className: \"module home\"\n    }, __jsx(Header, {\n      clientsCount: this.props.clientsCount\n    }), __jsx(Features, null), __jsx(NewFeatures, null)))));\n  }\n\n}\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}