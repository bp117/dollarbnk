{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as actionTypes from './actionTypes';\nimport getUserInitialData from 'tools/getUserInitialData';\nexport var setAuthStatus = function setAuthStatus(status) {\n  var email = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return {\n    type: actionTypes.SET_AUTH_STATUS,\n    status: status,\n    email: email\n  };\n};\nexport var fetchInitialData = function fetchInitialData() {\n  return function _callee(dispatch) {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getUserInitialData());\n\n          case 3:\n            data = _context.sent;\n\n            if (data) {\n              _context.next = 7;\n              break;\n            }\n\n            dispatch(initialDataStatus(false));\n            return _context.abrupt(\"return\");\n\n          case 7:\n            dispatch({\n              type: actionTypes.FETCH_PROFILE,\n              data: data.user\n            });\n            dispatch({\n              type: actionTypes.FETCH_ACCOUNTS,\n              data: data.accounts\n            });\n            dispatch({\n              type: actionTypes.FETCH_TRANSFERS,\n              data: data.transfers\n            });\n            dispatch({\n              type: actionTypes.FETCH_CARDS,\n              data: data.cards\n            });\n            dispatch({\n              type: actionTypes.FETCH_MESSAGES,\n              data: data.messages\n            });\n            dispatch(initialDataStatus(true));\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(initialDataStatus(false));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 15]], Promise);\n  };\n};\nexport var initialDataStatus = function initialDataStatus(status) {\n  return {\n    type: actionTypes.FETCH_INITIAL_DATA_STATUS,\n    status: status\n  };\n};","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/helper/actions/panel.js"],"names":["actionTypes","getUserInitialData","setAuthStatus","status","email","type","SET_AUTH_STATUS","fetchInitialData","dispatch","data","initialDataStatus","FETCH_PROFILE","user","FETCH_ACCOUNTS","accounts","FETCH_TRANSFERS","transfers","FETCH_CARDS","cards","FETCH_MESSAGES","messages","FETCH_INITIAL_DATA_STATUS"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD;AAAA,MAASC,KAAT,uEAAiB,IAAjB;AAAA,SAA2B;AACrDC,IAAAA,IAAI,EAAEL,WAAW,CAACM,eADmC;AAErDH,IAAAA,MAAM,EAANA,MAFqD;AAGrDC,IAAAA,KAAK,EAALA;AAHqD,GAA3B;AAAA,CAAtB;AAMP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEbP,kBAAkB,EAFL;;AAAA;AAE1BQ,YAAAA,IAF0B;;AAAA,gBAI3BA,IAJ2B;AAAA;AAAA;AAAA;;AAK7BD,YAAAA,QAAQ,CAACE,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AAL6B;;AAAA;AAShCF,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEL,WAAW,CAACW,aAApB;AAAmCF,cAAAA,IAAI,EAAEA,IAAI,CAACG;AAA9C,aAAD,CAAR;AACAJ,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEL,WAAW,CAACa,cAApB;AAAoCJ,cAAAA,IAAI,EAAEA,IAAI,CAACK;AAA/C,aAAD,CAAR;AACAN,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEL,WAAW,CAACe,eAApB;AAAqCN,cAAAA,IAAI,EAAEA,IAAI,CAACO;AAAhD,aAAD,CAAR;AACAR,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEL,WAAW,CAACiB,WAApB;AAAiCR,cAAAA,IAAI,EAAEA,IAAI,CAACS;AAA5C,aAAD,CAAR;AACAV,YAAAA,QAAQ,CAAC;AAAEH,cAAAA,IAAI,EAAEL,WAAW,CAACmB,cAApB;AAAoCV,cAAAA,IAAI,EAAEA,IAAI,CAACW;AAA/C,aAAD,CAAR;AACAZ,YAAAA,QAAQ,CAACE,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AAdgC;AAAA;;AAAA;AAAA;AAAA;AAgBhCF,YAAAA,QAAQ,CAACE,iBAAiB,CAAC,KAAD,CAAlB,CAAR;;AAhBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAzB;AAoBP,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAP,MAAM;AAAA,SAAK;AACzCE,IAAAA,IAAI,EAAEL,WAAW,CAACqB,yBADuB;AAEzClB,IAAAA,MAAM,EAANA;AAFyC,GAAL;AAAA,CAAhC","sourcesContent":["import * as actionTypes from './actionTypes';\nimport getUserInitialData from 'tools/getUserInitialData';\n\nexport const setAuthStatus = (status, email = null) => ({\n   type: actionTypes.SET_AUTH_STATUS,\n   status,\n   email\n});\n\nexport const fetchInitialData = () => async dispatch => {\n   try {\n      const data = await getUserInitialData();\n\n      if (!data) {\n         dispatch(initialDataStatus(false));\n         return;\n      }\n\n      dispatch({ type: actionTypes.FETCH_PROFILE, data: data.user });\n      dispatch({ type: actionTypes.FETCH_ACCOUNTS, data: data.accounts });\n      dispatch({ type: actionTypes.FETCH_TRANSFERS, data: data.transfers });\n      dispatch({ type: actionTypes.FETCH_CARDS, data: data.cards });\n      dispatch({ type: actionTypes.FETCH_MESSAGES, data: data.messages });\n      dispatch(initialDataStatus(true));\n   } catch (err) {\n      dispatch(initialDataStatus(false));\n   }\n};\n\nexport const initialDataStatus = status => ({\n   type: actionTypes.FETCH_INITIAL_DATA_STATUS,\n   status\n});\n"]},"metadata":{},"sourceType":"module"}