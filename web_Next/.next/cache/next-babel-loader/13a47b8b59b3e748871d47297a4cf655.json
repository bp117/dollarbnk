{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PageContainer from 'hoc/PageContainer';\nimport axios from 'axios';\nimport Loader from 'components/UI/Loader';\nimport Header from 'components/CurrencyStats/Header';\nimport CurrencySettings from 'components/CurrencyStats/CurrencySettings';\nimport CurrencyList from 'components/CurrencyStats/List';\nimport SingleButton from 'components/UI/Buttons/SingleButton';\nimport subDays from 'date-fns/subDays';\nimport format from 'date-fns/format';\nimport 'containers/CurrencyStats/style.scss';\nvar initData = {\n  currencies: 'GBP,AUD,CAD,CHF,CZK,EUR,HUF,JPY,NOK,PLN,RUB,SEK,USD'.split(','),\n  baseCurrency: 'GBP',\n  date: subDays(new Date(), 1)\n};\n\nvar CurrenciesPage = /*#__PURE__*/function (_Component) {\n  _inherits(CurrenciesPage, _Component);\n\n  var _super = _createSuper(CurrenciesPage);\n\n  function CurrenciesPage() {\n    var _this;\n\n    _classCallCheck(this, CurrenciesPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, initData, {\n      currencyData: [],\n      loaded: false\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"onBaseCurrencyChange\", function (baseCurrency) {\n      _this.setState({\n        baseCurrency: baseCurrency,\n        loaded: false\n      }, function () {\n        _this.makeAPIRequest();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onCurrencyDateChange\", function (date) {\n      _this.setState({\n        date: date,\n        loaded: false\n      }, function () {\n        _this.makeAPIRequest();\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CurrenciesPage, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.browser ? this.state : _objectSpread({}, this.props, {\n        date: subDays(new Date(), 1)\n      });\n\n      if (this.state.browser && !this.state.loaded) {\n        return __jsx(Loader, null);\n      } else {\n        return __jsx(PageContainer, null, __jsx(\"div\", {\n          className: \"row\"\n        }, __jsx(\"div\", {\n          className: \"col\"\n        }, __jsx(\"section\", {\n          className: \"module container-module currency-stats\"\n        }, __jsx(\"div\", {\n          className: \"currency-stats-header text-center\"\n        }, __jsx(Header, null), __jsx(CurrencySettings, {\n          date: data.date,\n          currencies: data.currencies,\n          baseCurrency: data.baseCurrency,\n          onBaseCurrencyChange: this.onBaseCurrencyChange,\n          onCurrencyDateChange: this.onCurrencyDateChange\n        })), __jsx(CurrencyList, {\n          currencyData: data.currencyData,\n          baseCurrency: data.baseCurrency\n        }), __jsx(\"div\", {\n          className: \"currency-stats-leave-section\"\n        }, __jsx(SingleButton, {\n          text: \"Go back to home page \\xBB\",\n          href: \"/\",\n          size: \"lg\"\n        }))))));\n      }\n    }\n  }, {\n    key: \"makeAPIRequest\",\n    value: function makeAPIRequest() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currencies = _this$state.currencies,\n          baseCurrency = _this$state.baseCurrency,\n          date = _this$state.date;\n      getCurrencyData({\n        currencies: currencies,\n        baseCurrency: baseCurrency,\n        date: date\n      }).then(function (currencyData) {\n        _this2.setState({\n          currencyData: currencyData,\n          loaded: true,\n          browser: true\n        });\n      })[\"catch\"](function () {\n        return _this2.setState({\n          loaded: 0\n        });\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var currencyData;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getCurrencyData(_objectSpread({}, initData)));\n\n            case 2:\n              currencyData = _context.sent;\n              return _context.abrupt(\"return\", _objectSpread({}, initData, {\n                currencyData: currencyData,\n                loaded: true\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CurrenciesPage;\n}(Component);\n\nfunction getCurrencyData(_ref) {\n  var currencies = _ref.currencies,\n      baseCurrency = _ref.baseCurrency,\n      date = _ref.date;\n  return new Promise(function (resolve, reject) {\n    // Remove baseCurrency from currencies list - it wouldn't make any sense\n    // Then, convert it from array to string (needed for API request)\n    var symbols = currencies.filter(function (curr) {\n      return curr !== baseCurrency;\n    }).join(',');\n    var apiParams = {\n      symbols: symbols,\n      base: baseCurrency\n    }; // If date is set - add it to request\n\n    if (date) {\n      apiParams.date = format(date, 'yyyy.MM.dd');\n    }\n\n    axios.get('https://api.exchangeratesapi.io/latest', {\n      params: apiParams\n    }).then(function (res) {\n      return res.data;\n    }).then(function (currencyData) {\n      resolve(currencyData);\n    })[\"catch\"](function () {\n      return reject();\n    });\n  });\n}\n\nexport default CurrenciesPage;","map":null,"metadata":{},"sourceType":"module"}