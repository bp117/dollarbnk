{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Link } from 'routes';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport TransfersListEl from '../ListElement';\n\nvar TransfersList = /*#__PURE__*/function (_Component) {\n  _inherits(TransfersList, _Component);\n\n  var _super = _createSuper(TransfersList);\n\n  function TransfersList(props) {\n    var _this;\n\n    _classCallCheck(this, TransfersList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"findTransfer\", function () {\n      _this.setState({\n        search: _this.refs.search.value\n      });\n    });\n\n    _this.state = {\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransfersList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Allow filtering by payee's name or transfer reference\n      var searchText = this.state.search.toLowerCase();\n      var transfersList = this.props.transfers.filter(function (trans) {\n        return trans.payeeName.toLowerCase().includes(searchText) || trans.reference.toLowerCase().includes(searchText);\n      }).map(function (trans) {\n        return __jsx(TransfersListEl, _extends({\n          key: trans._id\n        }, trans, {\n          matchUrl: _this2.props.router.asPath\n        }));\n      });\n      return __jsx(\"div\", null, __jsx(\"h1\", null, \"Transfers\"), __jsx(\"p\", null, \"There are \", this.props.transfers.length, \" transfers right now!\"), __jsx(\"p\", null, __jsx(Link, {\n        route: \"\".concat(this.props.router.asPath, \"/new\")\n      }, __jsx(\"a\", {\n        className: \"btn btn-primary\"\n      }, \"New transfer\"))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"input\", {\n        className: \"form-control\",\n        placeholder: \"Search for (payee/reference)...\",\n        onChange: this.findTransfer,\n        ref: \"search\"\n      })), __jsx(\"div\", {\n        className: \"list-group\"\n      }, transfersList));\n    }\n  }]);\n\n  return TransfersList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    transfers: state.transfers.data,\n    transfersCount: 20 // FAKE IT: better API needed\n\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(TransfersList));","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/Transfers/List/index.js"],"names":["React","Component","Link","connect","withRouter","TransfersListEl","TransfersList","props","setState","search","refs","value","state","searchText","toLowerCase","transfersList","transfers","filter","trans","payeeName","includes","reference","map","_id","router","asPath","length","findTransfer","mapStateToProps","data","transfersCount"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AAEA,OAAOC,eAAP,MAA4B,gBAA5B;;IAEMC,a;;;;;AACH,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;;AADgB,mEAQJ,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,MAAKC,IAAL,CAAUD,MAAV,CAAiBE;AAA3B,OAAd;AACF,KAVkB;;AAGhB,UAAKC,KAAL,GAAa;AACVH,MAAAA,MAAM,EAAE;AADE,KAAb;AAHgB;AAMlB;;;;6BAMQ;AAAA;;AACN;AACA,UAAMI,UAAU,GAAG,KAAKD,KAAL,CAAWH,MAAX,CAAkBK,WAAlB,EAAnB;AACA,UAAMC,aAAa,GAAG,KAAKR,KAAL,CAAWS,SAAX,CAClBC,MADkB,CAEhB,UAAAC,KAAK;AAAA,eACFA,KAAK,CAACC,SAAN,CAAgBL,WAAhB,GAA8BM,QAA9B,CAAuCP,UAAvC,KACAK,KAAK,CAACG,SAAN,CAAgBP,WAAhB,GAA8BM,QAA9B,CAAuCP,UAAvC,CAFE;AAAA,OAFW,EAMlBS,GANkB,CAMd,UAAAJ,KAAK;AAAA,eACP,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAEA,KAAK,CAACK;AAA5B,WAAqCL,KAArC;AAA4C,UAAA,QAAQ,EAAE,MAAI,CAACX,KAAL,CAAWiB,MAAX,CAAkBC;AAAxE,WADO;AAAA,OANS,CAAtB;AAUA,aACG,mBACG,8BADH,EAGG,+BAAc,KAAKlB,KAAL,CAAWS,SAAX,CAAqBU,MAAnC,0BAHH,EAIG,iBACG,MAAC,IAAD;AAAM,QAAA,KAAK,YAAK,KAAKnB,KAAL,CAAWiB,MAAX,CAAkBC,MAAvB;AAAX,SACG;AAAG,QAAA,SAAS,EAAC;AAAb,wBADH,CADH,CAJH,EAYG;AAAK,QAAA,SAAS,EAAC;AAAf,SACG;AACG,QAAA,SAAS,EAAC,cADb;AAEG,QAAA,WAAW,EAAC,iCAFf;AAGG,QAAA,QAAQ,EAAE,KAAKE,YAHlB;AAIG,QAAA,GAAG,EAAC;AAJP,QADH,CAZH,EAqBG;AAAK,QAAA,SAAS,EAAC;AAAf,SAA6BZ,aAA7B,CArBH,CADH;AAyBF;;;;EAnDwBd,S;;AAsD5B,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,KAAK,EAAI;AAC9B,SAAO;AACJI,IAAAA,SAAS,EAAEJ,KAAK,CAACI,SAAN,CAAgBa,IADvB;AAEJC,IAAAA,cAAc,EAAE,EAFZ,CAEe;;AAFf,GAAP;AAIF,CALD;;AAOA,eAAe3B,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,UAAU,CAACE,aAAD,CAAnC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'routes';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'next/router';\n\nimport TransfersListEl from '../ListElement';\n\nclass TransfersList extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         search: ''\n      };\n   }\n\n   findTransfer = () => {\n      this.setState({ search: this.refs.search.value });\n   };\n\n   render() {\n      // Allow filtering by payee's name or transfer reference\n      const searchText = this.state.search.toLowerCase();\n      const transfersList = this.props.transfers\n         .filter(\n            trans =>\n               trans.payeeName.toLowerCase().includes(searchText) ||\n               trans.reference.toLowerCase().includes(searchText)\n         )\n         .map(trans => (\n            <TransfersListEl key={trans._id} {...trans} matchUrl={this.props.router.asPath} />\n         ));\n\n      return (\n         <div>\n            <h1>Transfers</h1>\n\n            <p>There are {this.props.transfers.length} transfers right now!</p>\n            <p>\n               <Link route={`${this.props.router.asPath}/new`} >\n                  <a className=\"btn btn-primary\">\n                   New transfer\n                  </a>\n               </Link>\n            </p>\n\n            <div className=\"form-group\">\n               <input\n                  className=\"form-control\"\n                  placeholder=\"Search for (payee/reference)...\"\n                  onChange={this.findTransfer}\n                  ref=\"search\"\n               />\n            </div>\n\n            <div className=\"list-group\">{transfersList}</div>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      transfers: state.transfers.data,\n      transfersCount: 20 // FAKE IT: better API needed\n   };\n};\n\nexport default connect(mapStateToProps)(withRouter(TransfersList));\n"]},"metadata":{},"sourceType":"module"}