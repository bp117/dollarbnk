{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport LoadingAnimation from './LoadingAnimation';\n\nvar Loader = /*#__PURE__*/function (_Component) {\n  _inherits(Loader, _Component);\n\n  var _super = _createSuper(Loader);\n\n  function Loader() {\n    var _this;\n\n    _classCallCheck(this, Loader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showError: false\n    });\n\n    return _this;\n  }\n\n  _createClass(Loader, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Fragment, null, __jsx(LoadingAnimation, null), this.state.showError ? __jsx(\"p\", null, \"If loading takes too long, please refresh the page...\") : null);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Start timeout to show the error message\n      this.errorTimeout = setTimeout(function () {\n        return _this2.setState({\n          showError: true\n        });\n      }, 3000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Remove the timeout when component will be unmounted\n      // Otherwise it will still be working in background\n      clearTimeout(this.errorTimeout);\n    }\n  }]);\n\n  return Loader;\n}(Component);\n\nexport default Loader;","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/UI/Loader/index.js"],"names":["React","Component","Fragment","LoadingAnimation","Loader","showError","state","errorTimeout","setTimeout","setState","clearTimeout"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;IAEMC,M;;;;;;;;;;;;;;;;4DACK;AAAEC,MAAAA,SAAS,EAAE;AAAb,K;;;;;;;6BAEC;AACN,aACG,MAAC,QAAD,QACG,MAAC,gBAAD,OADH,EAEI,KAAKC,KAAL,CAAWD,SAAX,GACE,yEADF,GAEG,IAJP,CADH;AAQF;;;wCAEmB;AAAA;;AACjB;AACA,WAAKE,YAAL,GAAoBC,UAAU,CAAC;AAAA,eAAM,MAAI,CAACC,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAN;AAAA,OAAD,EAA2C,IAA3C,CAA9B;AACF;;;2CAEsB;AACpB;AACA;AACAK,MAAAA,YAAY,CAAC,KAAKH,YAAN,CAAZ;AACF;;;;EAvBiBN,S;;AA0BrB,eAAeG,MAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport LoadingAnimation from './LoadingAnimation';\n\nclass Loader extends Component {\n   state = { showError: false };\n\n   render() {\n      return (\n         <Fragment>\n            <LoadingAnimation />\n            {this.state.showError ? (\n               <p>If loading takes too long, please refresh the page...</p>\n            ) : null}\n         </Fragment>\n      );\n   }\n\n   componentDidMount() {\n      // Start timeout to show the error message\n      this.errorTimeout = setTimeout(() => this.setState({ showError: true }), 3000);\n   }\n\n   componentWillUnmount() {\n      // Remove the timeout when component will be unmounted\n      // Otherwise it will still be working in background\n      clearTimeout(this.errorTimeout);\n   }\n}\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}