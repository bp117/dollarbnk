{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, Fragment } from 'react';\nimport LoadingAnimation from './LoadingAnimation';\n\nclass Loader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showError: false\n    });\n  }\n\n  render() {\n    return __jsx(Fragment, null, __jsx(LoadingAnimation, null), this.state.showError ? __jsx(\"p\", null, \"If loading takes too long, please refresh the page...\") : null);\n  }\n\n  componentDidMount() {\n    // Start timeout to show the error message\n    this.errorTimeout = setTimeout(() => this.setState({\n      showError: true\n    }), 3000);\n  }\n\n  componentWillUnmount() {\n    // Remove the timeout when component will be unmounted\n    // Otherwise it will still be working in background\n    clearTimeout(this.errorTimeout);\n  }\n\n}\n\nexport default Loader;","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/UI/Loader/index.js"],"names":["React","Component","Fragment","LoadingAnimation","Loader","showError","render","state","componentDidMount","errorTimeout","setTimeout","setState","componentWillUnmount","clearTimeout"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACpB;AAAEI,MAAAA,SAAS,EAAE;AAAb,KADoB;AAAA;;AAG5BC,EAAAA,MAAM,GAAG;AACN,WACG,MAAC,QAAD,QACG,MAAC,gBAAD,OADH,EAEI,KAAKC,KAAL,CAAWF,SAAX,GACE,yEADF,GAEG,IAJP,CADH;AAQF;;AAEDG,EAAAA,iBAAiB,GAAG;AACjB;AACA,SAAKC,YAAL,GAAoBC,UAAU,CAAC,MAAM,KAAKC,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE;AAAb,KAAd,CAAP,EAA2C,IAA3C,CAA9B;AACF;;AAEDO,EAAAA,oBAAoB,GAAG;AACpB;AACA;AACAC,IAAAA,YAAY,CAAC,KAAKJ,YAAN,CAAZ;AACF;;AAvB2B;;AA0B/B,eAAeL,MAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport LoadingAnimation from './LoadingAnimation';\n\nclass Loader extends Component {\n   state = { showError: false };\n\n   render() {\n      return (\n         <Fragment>\n            <LoadingAnimation />\n            {this.state.showError ? (\n               <p>If loading takes too long, please refresh the page...</p>\n            ) : null}\n         </Fragment>\n      );\n   }\n\n   componentDidMount() {\n      // Start timeout to show the error message\n      this.errorTimeout = setTimeout(() => this.setState({ showError: true }), 3000);\n   }\n\n   componentWillUnmount() {\n      // Remove the timeout when component will be unmounted\n      // Otherwise it will still be working in background\n      clearTimeout(this.errorTimeout);\n   }\n}\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}