{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Link } from 'routes';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport TransfersListEl from '../ListElement';\n\nclass TransfersList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"findTransfer\", () => {\n      this.setState({\n        search: this.refs.search.value\n      });\n    });\n\n    this.state = {\n      search: ''\n    };\n  }\n\n  render() {\n    // Allow filtering by payee's name or transfer reference\n    const searchText = this.state.search.toLowerCase();\n    const transfersList = this.props.transfers.filter(trans => trans.payeeName.toLowerCase().includes(searchText) || trans.reference.toLowerCase().includes(searchText)).map(trans => __jsx(TransfersListEl, _extends({\n      key: trans._id\n    }, trans, {\n      matchUrl: this.props.router.asPath\n    })));\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"Transfers\"), __jsx(\"p\", null, \"There are \", this.props.transfers.length, \" transfers right now!\"), __jsx(\"p\", null, __jsx(Link, {\n      route: `${this.props.router.asPath}/new`\n    }, __jsx(\"a\", {\n      className: \"btn btn-primary\"\n    }, \"New transfer\"))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Search for (payee/reference)...\",\n      onChange: this.findTransfer,\n      ref: \"search\"\n    })), __jsx(\"div\", {\n      className: \"list-group\"\n    }, transfersList));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    transfers: state.transfers.data,\n    transfersCount: 20 // FAKE IT: better API needed\n\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(TransfersList));","map":null,"metadata":{},"sourceType":"module"}