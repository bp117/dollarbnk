{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from '../../store/index';\nimport App from 'next/app';\nexport var withRedux = function withRedux(PageComponent) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$ssr = _ref.ssr,\n      ssr = _ref$ssr === void 0 ? true : _ref$ssr;\n\n  var WithRedux = function WithRedux(_ref2) {\n    var initialReduxState = _ref2.initialReduxState,\n        props = _objectWithoutProperties(_ref2, [\"initialReduxState\"]);\n\n    var store = getOrInitializeStore(initialReduxState);\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(PageComponent, props));\n  }; // Make sure people don't use this HOC on _app.js level\n\n\n  if (true) {\n    var isAppHoc = PageComponent === App || PageComponent.prototype instanceof App;\n\n    if (isAppHoc) {\n      throw new Error('The withRedux HOC only works with PageComponents');\n    }\n  } // Set the correct displayName in development\n\n\n  if (true) {\n    var displayName = PageComponent.displayName || PageComponent.name || 'Component';\n    WithRedux.displayName = \"withRedux(\".concat(displayName, \")\");\n  }\n\n  if (ssr || PageComponent.getInitialProps) {\n    WithRedux.getInitialProps = function _callee(context) {\n      var reduxStore, pageProps;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Get or Create the store with `undefined` as initialState\n              // This allows you to set a custom default initialState\n              reduxStore = getOrInitializeStore(); // Provide the store to getInitialProps of pages\n\n              context.reduxStore = reduxStore; // Run getInitialProps from HOCed PageComponent\n\n              if (!(typeof PageComponent.getInitialProps === 'function')) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(PageComponent.getInitialProps(context));\n\n            case 5:\n              _context.t0 = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 8:\n              _context.t0 = {};\n\n            case 9:\n              pageProps = _context.t0;\n              return _context.abrupt(\"return\", _objectSpread({}, pageProps, {\n                initialReduxState: reduxStore.getState()\n              }));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }\n\n  return WithRedux;\n};\nvar reduxStore;\n\nvar getOrInitializeStore = function getOrInitializeStore(initialState) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (false) {\n    return configureStore(initialState);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!reduxStore) {\n    reduxStore = configureStore(initialState);\n  }\n\n  return reduxStore;\n};","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/helper/hoc/WithRedux/index.js"],"names":["React","Provider","configureStore","App","withRedux","PageComponent","ssr","WithRedux","initialReduxState","props","store","getOrInitializeStore","isAppHoc","prototype","Error","displayName","name","getInitialProps","context","reduxStore","pageProps","getState","initialState"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,aAAD,EAAwC;AAAA,iFAAP,EAAO;AAAA,sBAAtBC,GAAsB;AAAA,MAAtBA,GAAsB,yBAAhB,IAAgB;;AAC7D,MAAMC,SAAS,GAAG,SAAZA,SAAY,QAAqC;AAAA,QAAlCC,iBAAkC,SAAlCA,iBAAkC;AAAA,QAAZC,KAAY;;AACnD,QAAMC,KAAK,GAAGC,oBAAoB,CAACH,iBAAD,CAAlC;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEE;AAAjB,OACI,MAAC,aAAD,EAAmBD,KAAnB,CADJ,CADJ;AAKH,GAPD,CAD6D,CAU7D;;;AACA,YAA2C;AACvC,QAAMG,QAAQ,GACVP,aAAa,KAAKF,GAAlB,IAAyBE,aAAa,CAACQ,SAAd,YAAmCV,GADhE;;AAEA,QAAIS,QAAJ,EAAc;AACV,YAAM,IAAIE,KAAJ,CAAU,kDAAV,CAAN;AACH;AACJ,GAjB4D,CAmB7D;;;AACA,YAA2C;AACvC,QAAMC,WAAW,GACbV,aAAa,CAACU,WAAd,IAA6BV,aAAa,CAACW,IAA3C,IAAmD,WADvD;AAGAT,IAAAA,SAAS,CAACQ,WAAV,uBAAqCA,WAArC;AACH;;AAED,MAAIT,GAAG,IAAID,aAAa,CAACY,eAAzB,EAA0C;AACtCV,IAAAA,SAAS,CAACU,eAAV,GAA4B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA;AACMC,cAAAA,UAHkB,GAGLR,oBAAoB,EAHf,EAKxB;;AACAO,cAAAA,OAAO,CAACC,UAAR,GAAqBA,UAArB,CANwB,CAQxB;;AARwB,oBAUpB,OAAOd,aAAa,CAACY,eAArB,KAAyC,UAVrB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAWRZ,aAAa,CAACY,eAAd,CAA8BC,OAA9B,CAXQ;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,4BAYd,EAZc;;AAAA;AASlBE,cAAAA,SATkB;AAAA,iEAgBjBA,SAhBiB;AAiBpBZ,gBAAAA,iBAAiB,EAAEW,UAAU,CAACE,QAAX;AAjBC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5B;AAoBH;;AAED,SAAOd,SAAP;AACH,CAnDM;AAqDP,IAAIY,UAAJ;;AACA,IAAMR,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAW,YAAY,EAAI;AACzC;AACA,aAAmC;AAC/B,WAAOpB,cAAc,CAACoB,YAAD,CAArB;AACH,GAJwC,CAMzC;;;AACA,MAAI,CAACH,UAAL,EAAiB;AACbA,IAAAA,UAAU,GAAGjB,cAAc,CAACoB,YAAD,CAA3B;AACH;;AAED,SAAOH,UAAP;AACH,CAZD","sourcesContent":["import React from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from '../../store/index'\nimport App from 'next/app'\n\nexport const withRedux = (PageComponent, { ssr = true } = {}) => {\n    const WithRedux = ({ initialReduxState, ...props }) => {\n        const store = getOrInitializeStore(initialReduxState)\n        return (\n            <Provider store={store}>\n                <PageComponent {...props} />\n            </Provider>\n        )\n    }\n\n    // Make sure people don't use this HOC on _app.js level\n    if (process.env.NODE_ENV !== 'production') {\n        const isAppHoc =\n            PageComponent === App || PageComponent.prototype instanceof App\n        if (isAppHoc) {\n            throw new Error('The withRedux HOC only works with PageComponents')\n        }\n    }\n\n    // Set the correct displayName in development\n    if (process.env.NODE_ENV !== 'production') {\n        const displayName =\n            PageComponent.displayName || PageComponent.name || 'Component'\n\n        WithRedux.displayName = `withRedux(${displayName})`\n    }\n\n    if (ssr || PageComponent.getInitialProps) {\n        WithRedux.getInitialProps = async context => {\n            // Get or Create the store with `undefined` as initialState\n            // This allows you to set a custom default initialState\n            const reduxStore = getOrInitializeStore()\n\n            // Provide the store to getInitialProps of pages\n            context.reduxStore = reduxStore\n\n            // Run getInitialProps from HOCed PageComponent\n            const pageProps =\n                typeof PageComponent.getInitialProps === 'function'\n                    ? await PageComponent.getInitialProps(context)\n                    : {}\n\n            // Pass props to PageComponent\n            return {\n                ...pageProps,\n                initialReduxState: reduxStore.getState(),\n            }\n        }\n    }\n\n    return WithRedux\n}\n\nlet reduxStore\nconst getOrInitializeStore = initialState => {\n    // Always make a new store if server, otherwise state is shared between requests\n    if (typeof window === 'undefined') {\n        return configureStore(initialState)\n    }\n\n    // Create store if unavailable on the client and set it on the window object\n    if (!reduxStore) {\n        reduxStore = configureStore(initialState)\n    }\n\n    return reduxStore\n}"]},"metadata":{},"sourceType":"module"}