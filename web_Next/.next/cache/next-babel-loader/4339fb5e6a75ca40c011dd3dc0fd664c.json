{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport withAuth from 'hoc/WithAuth';\nimport { withRedux } from 'hoc/WithRedux';\nimport { isValidToken, login } from 'tools';\nimport { updateAPIConfig } from 'api/base';\nimport LoginBox from 'components/Auth/Login';\nimport PageContainer from 'hoc/PageContainer';\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      error: null\n    });\n\n    _defineProperty(this, \"onLoginSubmit\", (email, password) => {\n      this.setState({\n        loading: true,\n        error: null\n      }); // Dispatch auth action\n      // There will be automatic redirect to panel, in HOC\n\n      this.props.login({\n        email,\n        password\n      }).catch(error => this.setState({\n        loading: false,\n        error\n      }));\n    });\n  }\n\n  render() {\n    return __jsx(PageContainer, null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(LoginBox, {\n      onLoginSubmit: this.onLoginSubmit,\n      loading: this.state.loading,\n      error: this.state.error\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: data => dispatch(actions.login(data))\n  };\n};\n\nexport default withRedux(connect(null, mapDispatchToProps)(withAuth(LoginPage)));","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/pages/login.js"],"names":["React","Component","connect","actions","withAuth","withRedux","isValidToken","login","updateAPIConfig","LoginBox","PageContainer","LoginPage","loading","error","email","password","setState","props","catch","render","onLoginSubmit","state","mapDispatchToProps","dispatch","data"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,YAAT,EAAuBC,KAAvB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;;AAEA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCAEtB;AACJW,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAFsB;;AAAA,2CAuBd,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAd,EADiC,CAGjC;AACA;;AACA,WAAKI,KAAL,CACKV,KADL,CACW;AAAEO,QAAAA,KAAF;AAASC,QAAAA;AAAT,OADX,EAEKG,KAFL,CAEWL,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA;AAAlB,OAAd,CAFpB;AAGH,KA/B6B;AAAA;;AAO9BM,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,aAAD,QACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,QAAD;AACI,MAAA,aAAa,EAAE,KAAKC,aADxB;AAEI,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWT,OAFxB;AAGI,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWR;AAHtB,MADJ,CADJ,CADJ,CADJ;AAaH;;AArB6B;;AAkClC,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhB,IAAAA,KAAK,EAAEiB,IAAI,IAAID,QAAQ,CAACpB,OAAO,CAACI,KAAR,CAAciB,IAAd,CAAD;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAenB,SAAS,CAACH,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkClB,QAAQ,CAACO,SAAD,CAA1C,CAAD,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport withAuth from 'hoc/WithAuth';\nimport { withRedux } from 'hoc/WithRedux';\nimport { isValidToken, login } from 'tools';\nimport { updateAPIConfig } from 'api/base';\n\nimport LoginBox from 'components/Auth/Login';\nimport PageContainer from 'hoc/PageContainer';\n\nclass LoginPage extends Component {\n\n    state = {\n        loading: false,\n        error: null\n    };\n\n    render() {\n        return (\n            <PageContainer>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <LoginBox\n                            onLoginSubmit={this.onLoginSubmit}\n                            loading={this.state.loading}\n                            error={this.state.error}\n                        />\n                    </div>\n                </div>\n            </PageContainer>\n        );\n    }\n\n    onLoginSubmit = (email, password) => {\n        this.setState({ loading: true, error: null });\n\n        // Dispatch auth action\n        // There will be automatic redirect to panel, in HOC\n        this.props\n            .login({ email, password })\n            .catch(error => this.setState({ loading: false, error }));\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: data => dispatch(actions.login(data))\n    };\n};\n\nexport default withRedux(connect(null, mapDispatchToProps)(withAuth(LoginPage)));\n"]},"metadata":{},"sourceType":"module"}