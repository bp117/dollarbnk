{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport withAuth from 'hoc/WithAuth';\nimport RegisterBox from 'components/Auth/Register';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      error: null\n    });\n\n    _defineProperty(this, \"onRegisterSubmit\", (email, password) => {});\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(RegisterBox, {\n      history: this.props.history,\n      onRegisterSubmit: this.onRegisterSubmit,\n      loading: this.state.loading,\n      error: this.state.error\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: (email, password) => dispatch(actions.register(email, password))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withAuth(Register));","map":null,"metadata":{},"sourceType":"module"}