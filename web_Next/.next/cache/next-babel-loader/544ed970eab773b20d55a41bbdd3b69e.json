{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PageContainer from 'hoc/PageContainer';\nimport { withRedux } from 'hoc/WithRedux';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport { initialDataStatus } from 'actions/panel';\nimport withAuth from 'hoc/WithAuth';\nimport { isValidToken } from 'tools';\nimport Loader from 'components/UI/Loader';\nimport Navigation from 'containers/Navigation';\nimport PanelIntro from 'containers/Panel/Intro';\nimport Accounts from 'containers/Accounts';\nimport Transfers from 'containers/Transfers';\nimport Cards from 'containers/Cards';\nimport Profile from 'containers/Profile';\nimport ProfileChangeDetails from 'containers/Profile/ChangeDetails';\nimport Messages from 'containers/Messages';\nimport Help from 'components/Help';\nimport { updateAPIConfig } from 'api/base';\nimport nextCookie from 'next-cookies/index';\nimport { getMyself } from 'api/users';\nimport getUserInitialData from 'tools/getUserInitialData';\nimport * as actionTypes from '../helper/actions/actionTypes';\n\nclass PanelPage extends Component {\n  static async getInitialProps(ctx) {\n    const {\n      reduxStore,\n      query\n    } = ctx;\n    const {\n      token\n    } = nextCookie(ctx);\n    updateAPIConfig({\n      authToken: token\n    });\n    const {\n      dispatch\n    } = reduxStore;\n    updateAPIConfig({\n      authToken: token\n    });\n\n    try {\n      const data = await getUserInitialData();\n\n      if (!data) {\n        dispatch(initialDataStatus(false));\n        return;\n      }\n\n      dispatch({\n        type: actionTypes.FETCH_PROFILE,\n        data: data.user\n      });\n      dispatch({\n        type: actionTypes.FETCH_ACCOUNTS,\n        data: data.accounts\n      });\n      dispatch({\n        type: actionTypes.FETCH_TRANSFERS,\n        data: data.transfers\n      });\n      dispatch({\n        type: actionTypes.FETCH_CARDS,\n        data: data.cards\n      });\n      dispatch({\n        type: actionTypes.FETCH_MESSAGES,\n        data: data.messages\n      });\n      dispatch(initialDataStatus(true));\n    } catch (err) {\n      dispatch(initialDataStatus(false));\n    }\n\n    return {\n      query\n    };\n  }\n\n  componentDidMount() {\n    isValidToken().then(() => {\n      this.props.fetchInitialData();\n    }).catch(() => {});\n  }\n\n  render() {\n    if (!this.props.initialDataStatus) {\n      return __jsx(Loader, null);\n    } else {\n      const subPage = getSubPage(this.props);\n      return __jsx(PageContainer, null, __jsx(Navigation, null), subPage);\n    }\n  }\n\n}\n\nfunction getSubPage(props) {\n  const {\n    query = {}\n  } = props,\n        {\n    slug\n  } = query;\n\n  switch (slug) {\n    case 'accounts':\n      return __jsx(Accounts, {\n        query\n      });\n      break;\n\n    case 'transfers':\n      return __jsx(Transfers, {\n        query\n      });\n      break;\n\n    case 'cards':\n      return __jsx(Cards, {\n        query\n      });\n      break;\n\n    case 'profile':\n      return __jsx(Profile, null);\n      break;\n\n    case 'change-details':\n      return __jsx(ProfileChangeDetails, null);\n      break;\n\n    case 'messages':\n      return __jsx(Messages, {\n        query\n      });\n      break;\n\n    case 'help':\n      return __jsx(Help, null);\n      break;\n\n    default:\n      return __jsx(PanelIntro, null);\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    initialDataStatus: state.panel.initialDataStatus,\n    authStatus: state.auth.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAuthStatus: status => dispatch(actions.setAuthStatus(status)),\n    fetchInitialData: () => dispatch(actions.fetchInitialData())\n  };\n};\n\nexport default withRedux(connect(mapStateToProps, mapDispatchToProps)(withAuth(PanelPage)));","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/pages/panel.js"],"names":["React","Component","PageContainer","withRedux","connect","actions","initialDataStatus","withAuth","isValidToken","Loader","Navigation","PanelIntro","Accounts","Transfers","Cards","Profile","ProfileChangeDetails","Messages","Help","updateAPIConfig","nextCookie","getMyself","getUserInitialData","actionTypes","PanelPage","getInitialProps","ctx","reduxStore","query","token","authToken","dispatch","data","type","FETCH_PROFILE","user","FETCH_ACCOUNTS","accounts","FETCH_TRANSFERS","transfers","FETCH_CARDS","cards","FETCH_MESSAGES","messages","err","componentDidMount","then","props","fetchInitialData","catch","render","subPage","getSubPage","slug","mapStateToProps","state","panel","authStatus","auth","status","mapDispatchToProps","setAuthStatus"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\nimport PageContainer from 'hoc/PageContainer';\nimport { withRedux } from 'hoc/WithRedux';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport { initialDataStatus } from 'actions/panel';\nimport withAuth from 'hoc/WithAuth';\n\nimport { isValidToken } from 'tools';\n\nimport Loader from 'components/UI/Loader';\n\nimport Navigation from 'containers/Navigation';\nimport PanelIntro from 'containers/Panel/Intro';\n\nimport Accounts from 'containers/Accounts';\nimport Transfers from 'containers/Transfers';\nimport Cards from 'containers/Cards';\nimport Profile from 'containers/Profile';\nimport ProfileChangeDetails from 'containers/Profile/ChangeDetails';\nimport Messages from 'containers/Messages';\nimport Help from 'components/Help';\nimport { updateAPIConfig } from 'api/base';\nimport nextCookie from 'next-cookies/index'\nimport { getMyself } from 'api/users';\nimport getUserInitialData from 'tools/getUserInitialData';\nimport * as actionTypes from '../helper/actions/actionTypes'\n\nclass PanelPage extends Component {\n    static async getInitialProps(ctx) {\n        const { reduxStore, query } = ctx\n\n        const { token } = nextCookie(ctx)\n        updateAPIConfig({ authToken: token })\n\n        const { dispatch } = reduxStore\n\n        updateAPIConfig({ authToken: token })\n\n        try {\n            const data = await getUserInitialData();\n\n            if (!data) {\n                dispatch(initialDataStatus(false));\n                return;\n            }\n\n            dispatch({ type: actionTypes.FETCH_PROFILE, data: data.user });\n            dispatch({ type: actionTypes.FETCH_ACCOUNTS, data: data.accounts });\n            dispatch({ type: actionTypes.FETCH_TRANSFERS, data: data.transfers });\n            dispatch({ type: actionTypes.FETCH_CARDS, data: data.cards });\n            dispatch({ type: actionTypes.FETCH_MESSAGES, data: data.messages });\n            dispatch(initialDataStatus(true));\n        } catch (err) {\n            dispatch(initialDataStatus(false));\n        }\n\n        return {\n            query,\n        }\n    }\n\n    componentDidMount() {\n       isValidToken()\n            .then(() => {\n                this.props.fetchInitialData();\n            })\n            .catch(() => {\n            });\n    }\n\n    render() {\n        if (!this.props.initialDataStatus) {\n            return <Loader />;\n        } else {\n            const subPage = getSubPage(this.props)\n\n            return (\n                <PageContainer>\n                    <Navigation />\n                    {subPage}\n                </PageContainer>\n            );\n        }\n    }\n}\n\nfunction getSubPage(props) {\n    const { query = {} } = props,\n        { slug } = query\n\n    switch (slug) {\n        case 'accounts':\n            return <Accounts {...{query}}/>\n            break;\n        case 'transfers':\n            return <Transfers {...{query}}/>\n            break;\n        case 'cards':\n            return <Cards {...{query}}/>\n            break;\n        case 'profile':\n            return <Profile/>\n            break;\n        case 'change-details':\n            return <ProfileChangeDetails />\n            break;\n        case 'messages':\n            return <Messages {...{query}}/>\n            break;\n        case 'help':\n            return <Help />\n            break;\n        default:\n            return <PanelIntro />\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        initialDataStatus: state.panel.initialDataStatus,\n        authStatus: state.auth.status,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setAuthStatus: status => dispatch(actions.setAuthStatus(status)),\n        fetchInitialData: () => dispatch(actions.fetchInitialData())\n    };\n};\n\nexport default withRedux(connect(mapStateToProps, mapDispatchToProps)(withAuth(PanelPage)))"]},"metadata":{},"sourceType":"module"}