{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getMyAccounts } from 'api/accounts';\nimport * as actionTypes from './actionTypes';\nexport var fetchAccounts = function fetchAccounts() {\n  return function _callee(dispatch) {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getMyAccounts());\n\n          case 3:\n            data = _context.sent;\n\n            if (data) {\n              _context.next = 7;\n              break;\n            }\n\n            dispatch(fetchAccountsStatus(false));\n            return _context.abrupt(\"return\");\n\n          case 7:\n            dispatch({\n              type: actionTypes.FETCH_ACCOUNTS,\n              data: data\n            });\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(fetchAccountsStatus(false)); // throw new Error('Accounts fetch failed');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};\nexport var fetchAccountsStatus = function fetchAccountsStatus(status) {\n  return {\n    type: actionTypes.FETCH_ACCOUNTS_STATUS,\n    status: status\n  };\n};","map":null,"metadata":{},"sourceType":"module"}