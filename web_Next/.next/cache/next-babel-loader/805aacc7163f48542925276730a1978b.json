{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { updateAPIConfig } from 'api/base';\nimport { loginUser, registerUser } from 'api/auth';\nimport * as actionTypes from './actionTypes'; // Tools\n\nimport { setAuthToken } from 'tools';\nexport var setAuthStatus = function setAuthStatus(status) {\n  var email = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return {\n    type: actionTypes.SET_AUTH_STATUS,\n    status: status,\n    email: email\n  };\n}; // Login\n\nexport var login = function login(data) {\n  return function _callee(dispatch) {\n    var token;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(loginUser(data));\n\n          case 3:\n            token = _context.sent;\n\n            if (token) {\n              _context.next = 7;\n              break;\n            }\n\n            dispatch(setAuthStatus(false));\n            return _context.abrupt(\"return\");\n\n          case 7:\n            setAuthToken(token);\n            updateAPIConfig({\n              authToken: token\n            });\n            dispatch(setAuthStatus(true));\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            dispatch(setAuthStatus(false));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n}; // Register\n\nexport var register = function register(data) {\n  return function _callee2(dispatch) {\n    var user;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(registerUser(data));\n\n          case 3:\n            user = _context2.sent;\n\n            if (user) {\n              _context2.next = 7;\n              break;\n            }\n\n            dispatch(setAuthStatus(false));\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            dispatch(setAuthStatus(true));\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch(setAuthStatus(false));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};","map":null,"metadata":{},"sourceType":"module"}