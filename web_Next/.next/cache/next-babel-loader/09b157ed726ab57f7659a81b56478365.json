{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Link } from 'routes';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport TransfersListEl from '../ListElement';\n\nclass TransfersList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"findTransfer\", () => {\n      this.setState({\n        search: this.refs.search.value\n      });\n    });\n\n    this.state = {\n      search: ''\n    };\n  }\n\n  render() {\n    // Allow filtering by payee's name or transfer reference\n    const searchText = this.state.search.toLowerCase();\n    const transfersList = this.props.transfers.filter(trans => trans.payeeName.toLowerCase().includes(searchText) || trans.reference.toLowerCase().includes(searchText)).map(trans => __jsx(TransfersListEl, _extends({\n      key: trans._id\n    }, trans, {\n      matchUrl: this.props.router.asPath\n    })));\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"Transfers\"), __jsx(\"p\", null, \"There are \", this.props.transfers.length, \" transfers right now!\"), __jsx(\"p\", null, __jsx(Link, {\n      route: `${this.props.router.asPath}/new`\n    }, __jsx(\"a\", {\n      className: \"btn btn-primary\"\n    }, \"New transfer\"))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"input\", {\n      className: \"form-control\",\n      placeholder: \"Search for (payee/reference)...\",\n      onChange: this.findTransfer,\n      ref: \"search\"\n    })), __jsx(\"div\", {\n      className: \"list-group\"\n    }, transfersList));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    transfers: state.transfers.data,\n    transfersCount: 20 // FAKE IT: better API needed\n\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(TransfersList));","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/Transfers/List/index.js"],"names":["React","Component","Link","connect","withRouter","TransfersListEl","TransfersList","constructor","props","setState","search","refs","value","state","render","searchText","toLowerCase","transfersList","transfers","filter","trans","payeeName","includes","reference","map","_id","router","asPath","length","findTransfer","mapStateToProps","data","transfersCount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AAEA,OAAOC,eAAP,MAA4B,gBAA5B;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,0CAQJ,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUD,MAAV,CAAiBE;AAA3B,OAAd;AACF,KAVkB;;AAGhB,SAAKC,KAAL,GAAa;AACVH,MAAAA,MAAM,EAAE;AADE,KAAb;AAGF;;AAMDI,EAAAA,MAAM,GAAG;AACN;AACA,UAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWH,MAAX,CAAkBM,WAAlB,EAAnB;AACA,UAAMC,aAAa,GAAG,KAAKT,KAAL,CAAWU,SAAX,CAClBC,MADkB,CAEhBC,KAAK,IACFA,KAAK,CAACC,SAAN,CAAgBL,WAAhB,GAA8BM,QAA9B,CAAuCP,UAAvC,KACAK,KAAK,CAACG,SAAN,CAAgBP,WAAhB,GAA8BM,QAA9B,CAAuCP,UAAvC,CAJa,EAMlBS,GANkB,CAMdJ,KAAK,IACP,MAAC,eAAD;AAAiB,MAAA,GAAG,EAAEA,KAAK,CAACK;AAA5B,OAAqCL,KAArC;AAA4C,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWkB,MAAX,CAAkBC;AAAxE,OAPgB,CAAtB;AAUA,WACG,mBACG,8BADH,EAGG,+BAAc,KAAKnB,KAAL,CAAWU,SAAX,CAAqBU,MAAnC,0BAHH,EAIG,iBACG,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,GAAE,KAAKpB,KAAL,CAAWkB,MAAX,CAAkBC,MAAO;AAAzC,OACG;AAAG,MAAA,SAAS,EAAC;AAAb,sBADH,CADH,CAJH,EAYG;AAAK,MAAA,SAAS,EAAC;AAAf,OACG;AACG,MAAA,SAAS,EAAC,cADb;AAEG,MAAA,WAAW,EAAC,iCAFf;AAGG,MAAA,QAAQ,EAAE,KAAKE,YAHlB;AAIG,MAAA,GAAG,EAAC;AAJP,MADH,CAZH,EAqBG;AAAK,MAAA,SAAS,EAAC;AAAf,OAA6BZ,aAA7B,CArBH,CADH;AAyBF;;AAnDkC;;AAsDtC,MAAMa,eAAe,GAAGjB,KAAK,IAAI;AAC9B,SAAO;AACJK,IAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,CAAgBa,IADvB;AAEJC,IAAAA,cAAc,EAAE,EAFZ,CAEe;;AAFf,GAAP;AAIF,CALD;;AAOA,eAAe7B,OAAO,CAAC2B,eAAD,CAAP,CAAyB1B,UAAU,CAACE,aAAD,CAAnC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'routes';\nimport { connect } from 'react-redux';\nimport {withRouter} from 'next/router';\n\nimport TransfersListEl from '../ListElement';\n\nclass TransfersList extends Component {\n   constructor(props) {\n      super(props);\n\n      this.state = {\n         search: ''\n      };\n   }\n\n   findTransfer = () => {\n      this.setState({ search: this.refs.search.value });\n   };\n\n   render() {\n      // Allow filtering by payee's name or transfer reference\n      const searchText = this.state.search.toLowerCase();\n      const transfersList = this.props.transfers\n         .filter(\n            trans =>\n               trans.payeeName.toLowerCase().includes(searchText) ||\n               trans.reference.toLowerCase().includes(searchText)\n         )\n         .map(trans => (\n            <TransfersListEl key={trans._id} {...trans} matchUrl={this.props.router.asPath} />\n         ));\n\n      return (\n         <div>\n            <h1>Transfers</h1>\n\n            <p>There are {this.props.transfers.length} transfers right now!</p>\n            <p>\n               <Link route={`${this.props.router.asPath}/new`} >\n                  <a className=\"btn btn-primary\">\n                   New transfer\n                  </a>\n               </Link>\n            </p>\n\n            <div className=\"form-group\">\n               <input\n                  className=\"form-control\"\n                  placeholder=\"Search for (payee/reference)...\"\n                  onChange={this.findTransfer}\n                  ref=\"search\"\n               />\n            </div>\n\n            <div className=\"list-group\">{transfersList}</div>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      transfers: state.transfers.data,\n      transfersCount: 20 // FAKE IT: better API needed\n   };\n};\n\nexport default connect(mapStateToProps)(withRouter(TransfersList));\n"]},"metadata":{},"sourceType":"module"}