{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport withAuth from 'hoc/WithAuth';\nimport { withRedux } from 'hoc/WithRedux';\nimport { isValidToken, login } from 'tools';\nimport { updateAPIConfig } from 'api/base';\nimport LoginBox from 'components/Auth/Login';\nimport PageContainer from 'hoc/PageContainer';\n\nclass LoginPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false,\n      error: null\n    });\n\n    _defineProperty(this, \"onLoginSubmit\", (email, password) => {\n      this.setState({\n        loading: true,\n        error: null\n      }); // Dispatch auth action\n      // There will be automatic redirect to panel, in HOC\n\n      this.props.login({\n        email,\n        password\n      }).catch(error => this.setState({\n        loading: false,\n        error\n      }));\n    });\n  }\n\n  render() {\n    return __jsx(PageContainer, null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col\"\n    }, __jsx(LoginBox, {\n      onLoginSubmit: this.onLoginSubmit,\n      loading: this.state.loading,\n      error: this.state.error\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: data => dispatch(actions.login(data))\n  };\n};\n\nexport default withRedux(connect(null, mapDispatchToProps)(withAuth(LoginPage)));","map":null,"metadata":{},"sourceType":"module"}