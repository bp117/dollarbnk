{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from 'actions/actionTypes';\nvar initialState = {\n  data: {},\n  status: true\n};\n\nvar profile = function profile() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.FETCH_PROFILE:\n      return _objectSpread({}, state, {\n        data: _objectSpread({}, action.data),\n        status: true\n      });\n\n    case actionTypes.FETCH_PROFILE_STATUS:\n      return _objectSpread({}, state, {\n        status: action.status\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default profile;","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/helper/reducers/profile.js"],"names":["actionTypes","initialState","data","status","profile","state","action","type","FETCH_PROFILE","FETCH_PROFILE_STATUS"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,qBAA7B;AAEA,IAAMC,YAAY,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,MAAM,EAAE;AAFU,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKP,WAAW,CAACQ,aAAjB;AACG,+BACMH,KADN;AAEGH,QAAAA,IAAI,oBAAOI,MAAM,CAACJ,IAAd,CAFP;AAGGC,QAAAA,MAAM,EAAE;AAHX;;AAMH,SAAKH,WAAW,CAACS,oBAAjB;AACG,+BACMJ,KADN;AAEGF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAFlB;;AAKH;AACG,aAAOE,KAAP;AAfN;AAiBF,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from 'actions/actionTypes';\n\nconst initialState = {\n   data: {},\n   status: true\n};\n\nconst profile = (state = initialState, action) => {\n   switch (action.type) {\n      case actionTypes.FETCH_PROFILE:\n         return {\n            ...state,\n            data: { ...action.data },\n            status: true\n         };\n\n      case actionTypes.FETCH_PROFILE_STATUS:\n         return {\n            ...state,\n            status: action.status\n         };\n\n      default:\n         return state;\n   }\n};\n\nexport default profile;\n"]},"metadata":{},"sourceType":"module"}