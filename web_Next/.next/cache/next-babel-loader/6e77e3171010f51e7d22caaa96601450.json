{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PageContainer from 'hoc/PageContainer';\nimport { withRedux } from 'hoc/WithRedux';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport { initialDataStatus } from 'actions/panel';\nimport withAuth from 'hoc/WithAuth';\nimport { isValidToken } from 'tools';\nimport Loader from 'components/UI/Loader';\nimport Navigation from 'containers/Navigation';\nimport PanelIntro from 'containers/Panel/Intro';\nimport Accounts from 'containers/Accounts';\nimport Transfers from 'containers/Transfers';\nimport Cards from 'containers/Cards';\nimport Profile from 'containers/Profile';\nimport ProfileChangeDetails from 'containers/Profile/ChangeDetails';\nimport Messages from 'containers/Messages';\nimport Help from 'components/Help';\nimport { updateAPIConfig } from 'api/base';\nimport nextCookie from 'next-cookies/index';\nimport { getMyself } from 'api/users';\nimport getUserInitialData from 'tools/getUserInitialData';\nimport * as actionTypes from '../helper/actions/actionTypes';\n\nvar PanelPage = /*#__PURE__*/function (_Component) {\n  _inherits(PanelPage, _Component);\n\n  var _super = _createSuper(PanelPage);\n\n  function PanelPage() {\n    _classCallCheck(this, PanelPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PanelPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      isValidToken().then(function () {\n        _this.props.fetchInitialData();\n      })[\"catch\"](function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.initialDataStatus) {\n        return __jsx(Loader, null);\n      } else {\n        var subPage = getSubPage(this.props);\n        return __jsx(PageContainer, null, __jsx(Navigation, null), subPage);\n      }\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var reduxStore, query, _nextCookie, token, dispatch, data;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              reduxStore = ctx.reduxStore, query = ctx.query;\n              _nextCookie = nextCookie(ctx), token = _nextCookie.token;\n              updateAPIConfig({\n                authToken: token\n              });\n              dispatch = reduxStore.dispatch;\n              updateAPIConfig({\n                authToken: token\n              });\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(getUserInitialData());\n\n            case 8:\n              data = _context.sent;\n\n              if (data) {\n                _context.next = 12;\n                break;\n              }\n\n              dispatch(initialDataStatus(false));\n              return _context.abrupt(\"return\");\n\n            case 12:\n              dispatch({\n                type: actionTypes.FETCH_PROFILE,\n                data: data.user\n              });\n              dispatch({\n                type: actionTypes.FETCH_ACCOUNTS,\n                data: data.accounts\n              });\n              dispatch({\n                type: actionTypes.FETCH_TRANSFERS,\n                data: data.transfers\n              });\n              dispatch({\n                type: actionTypes.FETCH_CARDS,\n                data: data.cards\n              });\n              dispatch({\n                type: actionTypes.FETCH_MESSAGES,\n                data: data.messages\n              });\n              dispatch(initialDataStatus(true));\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](5);\n              dispatch(initialDataStatus(false));\n\n            case 23:\n              return _context.abrupt(\"return\", {\n                query: query\n              });\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 20]], Promise);\n    }\n  }]);\n\n  return PanelPage;\n}(Component);\n\nfunction getSubPage(props) {\n  var _props$query = props.query,\n      query = _props$query === void 0 ? {} : _props$query,\n      slug = query.slug;\n\n  switch (slug) {\n    case 'accounts':\n      return __jsx(Accounts, {\n        query: query\n      });\n      break;\n\n    case 'transfers':\n      return __jsx(Transfers, {\n        query: query\n      });\n      break;\n\n    case 'cards':\n      return __jsx(Cards, {\n        query: query\n      });\n      break;\n\n    case 'profile':\n      return __jsx(Profile, null);\n      break;\n\n    case 'change-details':\n      return __jsx(ProfileChangeDetails, null);\n      break;\n\n    case 'messages':\n      return __jsx(Messages, {\n        query: query\n      });\n      break;\n\n    case 'help':\n      return __jsx(Help, null);\n      break;\n\n    default:\n      return __jsx(PanelIntro, null);\n  }\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    initialDataStatus: state.panel.initialDataStatus,\n    authStatus: state.auth.status\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setAuthStatus: function setAuthStatus(status) {\n      return dispatch(actions.setAuthStatus(status));\n    },\n    fetchInitialData: function fetchInitialData() {\n      return dispatch(actions.fetchInitialData());\n    }\n  };\n};\n\nexport default withRedux(connect(mapStateToProps, mapDispatchToProps)(withAuth(PanelPage)));","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/pages/panel.js"],"names":["React","Component","PageContainer","withRedux","connect","actions","initialDataStatus","withAuth","isValidToken","Loader","Navigation","PanelIntro","Accounts","Transfers","Cards","Profile","ProfileChangeDetails","Messages","Help","updateAPIConfig","nextCookie","getMyself","getUserInitialData","actionTypes","PanelPage","then","props","fetchInitialData","subPage","getSubPage","ctx","reduxStore","query","token","authToken","dispatch","data","type","FETCH_PROFILE","user","FETCH_ACCOUNTS","accounts","FETCH_TRANSFERS","transfers","FETCH_CARDS","cards","FETCH_MESSAGES","messages","slug","mapStateToProps","state","panel","authStatus","auth","status","mapDispatchToProps","setAuthStatus"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\nimport PageContainer from 'hoc/PageContainer';\nimport { withRedux } from 'hoc/WithRedux';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport { initialDataStatus } from 'actions/panel';\nimport withAuth from 'hoc/WithAuth';\n\nimport { isValidToken } from 'tools';\n\nimport Loader from 'components/UI/Loader';\n\nimport Navigation from 'containers/Navigation';\nimport PanelIntro from 'containers/Panel/Intro';\n\nimport Accounts from 'containers/Accounts';\nimport Transfers from 'containers/Transfers';\nimport Cards from 'containers/Cards';\nimport Profile from 'containers/Profile';\nimport ProfileChangeDetails from 'containers/Profile/ChangeDetails';\nimport Messages from 'containers/Messages';\nimport Help from 'components/Help';\nimport { updateAPIConfig } from 'api/base';\nimport nextCookie from 'next-cookies/index'\nimport { getMyself } from 'api/users';\nimport getUserInitialData from 'tools/getUserInitialData';\nimport * as actionTypes from '../helper/actions/actionTypes'\n\nclass PanelPage extends Component {\n    static async getInitialProps(ctx) {\n        const { reduxStore, query } = ctx\n\n        const { token } = nextCookie(ctx)\n        updateAPIConfig({ authToken: token })\n\n        const { dispatch } = reduxStore\n\n        updateAPIConfig({ authToken: token })\n\n        try {\n            const data = await getUserInitialData();\n\n            if (!data) {\n                dispatch(initialDataStatus(false));\n                return;\n            }\n\n            dispatch({ type: actionTypes.FETCH_PROFILE, data: data.user });\n            dispatch({ type: actionTypes.FETCH_ACCOUNTS, data: data.accounts });\n            dispatch({ type: actionTypes.FETCH_TRANSFERS, data: data.transfers });\n            dispatch({ type: actionTypes.FETCH_CARDS, data: data.cards });\n            dispatch({ type: actionTypes.FETCH_MESSAGES, data: data.messages });\n            dispatch(initialDataStatus(true));\n        } catch (err) {\n            dispatch(initialDataStatus(false));\n        }\n\n        return {\n            query,\n        }\n    }\n\n    componentDidMount() {\n       isValidToken()\n            .then(() => {\n                this.props.fetchInitialData();\n            })\n            .catch(() => {\n            });\n    }\n\n    render() {\n        if (!this.props.initialDataStatus) {\n            return <Loader />;\n        } else {\n            const subPage = getSubPage(this.props)\n\n            return (\n                <PageContainer>\n                    <Navigation />\n                    {subPage}\n                </PageContainer>\n            );\n        }\n    }\n}\n\nfunction getSubPage(props) {\n    const { query = {} } = props,\n        { slug } = query\n\n    switch (slug) {\n        case 'accounts':\n            return <Accounts {...{query}}/>\n            break;\n        case 'transfers':\n            return <Transfers {...{query}}/>\n            break;\n        case 'cards':\n            return <Cards {...{query}}/>\n            break;\n        case 'profile':\n            return <Profile/>\n            break;\n        case 'change-details':\n            return <ProfileChangeDetails />\n            break;\n        case 'messages':\n            return <Messages {...{query}}/>\n            break;\n        case 'help':\n            return <Help />\n            break;\n        default:\n            return <PanelIntro />\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        initialDataStatus: state.panel.initialDataStatus,\n        authStatus: state.auth.status,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setAuthStatus: status => dispatch(actions.setAuthStatus(status)),\n        fetchInitialData: () => dispatch(actions.fetchInitialData())\n    };\n};\n\nexport default withRedux(connect(mapStateToProps, mapDispatchToProps)(withAuth(PanelPage)))"]},"metadata":{},"sourceType":"module"}