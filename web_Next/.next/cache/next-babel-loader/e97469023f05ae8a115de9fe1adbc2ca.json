{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getMyself } from 'api/users';\nimport { getMyAccounts } from 'api/accounts';\nimport { getMyCards } from 'api/cards';\nimport { getMyTransfers } from 'api/transfers';\nimport { getMyMessages } from 'api/messages'; // Fetch data for all the sections\n\nexport default (function _callee() {\n  var data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getMyself());\n\n        case 3:\n          _context.t0 = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(getMyAccounts());\n\n        case 6:\n          _context.t1 = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(getMyCards());\n\n        case 9:\n          _context.t2 = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getMyTransfers());\n\n        case 12:\n          _context.t3 = _context.sent;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(getMyMessages());\n\n        case 15:\n          _context.t4 = _context.sent;\n          data = {\n            user: _context.t0,\n            accounts: _context.t1,\n            cards: _context.t2,\n            transfers: _context.t3,\n            messages: _context.t4\n          };\n          return _context.abrupt(\"return\", data);\n\n        case 20:\n          _context.prev = 20;\n          _context.t5 = _context[\"catch\"](0);\n          throw new Error(_context.t5);\n\n        case 23:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 20]], Promise);\n});","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/helper/tools/getUserInitialData.js"],"names":["getMyself","getMyAccounts","getMyCards","getMyTransfers","getMyMessages","data","user","accounts","cards","transfers","messages","Error"],"mappings":";AAAA,SAASA,SAAT,QAA0B,WAA1B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,aAAT,QAA8B,cAA9B,C,CAEA;;AACA,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGMJ,SAAS,EAHf;;AAAA;AAAA;AAAA;AAAA,2CAIUC,aAAa,EAJvB;;AAAA;AAAA;AAAA;AAAA,2CAKOC,UAAU,EALjB;;AAAA;AAAA;AAAA;AAAA,2CAMWC,cAAc,EANzB;;AAAA;AAAA;AAAA;AAAA,2CAOUC,aAAa,EAPvB;;AAAA;AAAA;AAEHC,UAAAA,IAFG;AAGNC,YAAAA,IAHM;AAINC,YAAAA,QAJM;AAKNC,YAAAA,KALM;AAMNC,YAAAA,SANM;AAONC,YAAAA,QAPM;AAAA;AAAA,2CAUFL,IAVE;;AAAA;AAAA;AAAA;AAAA,gBAYH,IAAIM,KAAJ,aAZG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { getMyself } from 'api/users';\nimport { getMyAccounts } from 'api/accounts';\nimport { getMyCards } from 'api/cards';\nimport { getMyTransfers } from 'api/transfers';\nimport { getMyMessages } from 'api/messages';\n\n// Fetch data for all the sections\nexport default async () => {\n   try {\n      const data = {\n         user: await getMyself(),\n         accounts: await getMyAccounts(),\n         cards: await getMyCards(),\n         transfers: await getMyTransfers(),\n         messages: await getMyMessages()\n      };\n\n      return data;\n   } catch (err) {\n      throw new Error(err);\n   }\n};\n"]},"metadata":{},"sourceType":"module"}