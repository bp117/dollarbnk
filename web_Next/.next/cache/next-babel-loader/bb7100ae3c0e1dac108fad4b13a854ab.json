{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport Form from './Form';\n\nvar NewTransfer = /*#__PURE__*/function (_Component) {\n  _inherits(NewTransfer, _Component);\n\n  var _super = _createSuper(NewTransfer);\n\n  function NewTransfer() {\n    _classCallCheck(this, NewTransfer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NewTransfer, [{\n    key: \"render\",\n    value: function render() {\n      var accounts = this.props.accounts;\n      var firstAccId = accounts[0]._id;\n      var userAccountsList = accounts.map(function (acc) {\n        return __jsx(\"option\", {\n          key: acc._id,\n          value: acc._id\n        }, \"\".concat(acc.type, \", \").concat(acc.sortcode, \", \").concat(acc.balance, \" \").concat(acc.currency));\n      });\n      return __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-8 offset-sm-2 col-md-6 offset-md-3\"\n      }, __jsx(\"section\", {\n        className: \"module new-transfer\"\n      }, __jsx(\"h1\", null, \"New transfer\"), __jsx(Form, {\n        userId: this.props.userId,\n        userAccountsList: userAccountsList,\n        firstAccId: firstAccId,\n        addTransfer: this.props.addTransfer\n      }))));\n    }\n  }]);\n\n  return NewTransfer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accounts: state.accounts.data,\n    userId: state.profile.data._id\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addTransfer: function addTransfer(data) {\n      return dispatch(actions.addTransfer(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransfer);","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/Transfers/New/index.js"],"names":["React","Component","connect","actions","Form","NewTransfer","accounts","props","firstAccId","_id","userAccountsList","map","acc","type","sortcode","balance","currency","userId","addTransfer","mapStateToProps","state","data","profile","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,W;;;;;;;;;;;;;6BACM;AACN,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA5B;AACA,UAAME,UAAU,GAAGF,QAAQ,CAAC,CAAD,CAAR,CAAYG,GAA/B;AACA,UAAMC,gBAAgB,GAAGJ,QAAQ,CAACK,GAAT,CAAa,UAAAC,GAAG;AAAA,eACtC;AAAQ,UAAA,GAAG,EAAEA,GAAG,CAACH,GAAjB;AAAsB,UAAA,KAAK,EAAEG,GAAG,CAACH;AAAjC,qBACOG,GAAG,CAACC,IADX,eACoBD,GAAG,CAACE,QADxB,eACqCF,GAAG,CAACG,OADzC,cACoDH,GAAG,CAACI,QADxD,EADsC;AAAA,OAAhB,CAAzB;AAMA,aACG;AAAK,QAAA,SAAS,EAAC;AAAf,SACG;AAAK,QAAA,SAAS,EAAC;AAAf,SACG;AAAS,QAAA,SAAS,EAAC;AAAnB,SACG,iCADH,EAGG,MAAC,IAAD;AACG,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MADtB;AAEG,QAAA,gBAAgB,EAAEP,gBAFrB;AAGG,QAAA,UAAU,EAAEF,UAHf;AAIG,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWW;AAJ3B,QAHH,CADH,CADH,CADH;AAgBF;;;;EA1BsBjB,S;;AA6B1B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC9B,SAAO;AACJd,IAAAA,QAAQ,EAAEc,KAAK,CAACd,QAAN,CAAee,IADrB;AAEJJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,IAAd,CAAmBZ;AAFvB,GAAP;AAIF,CALD;;AAOA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACpC,SAAO;AACJN,IAAAA,WAAW,EAAE,qBAAAG,IAAI;AAAA,aAAIG,QAAQ,CAACrB,OAAO,CAACe,WAAR,CAAoBG,IAApB,CAAD,CAAZ;AAAA;AADb,GAAP;AAGF,CAJD;;AAMA,eAAenB,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClB,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport Form from './Form';\n\nclass NewTransfer extends Component {\n   render() {\n      const accounts = this.props.accounts;\n      const firstAccId = accounts[0]._id;\n      const userAccountsList = accounts.map(acc => (\n         <option key={acc._id} value={acc._id}>\n            {`${acc.type}, ${acc.sortcode}, ${acc.balance} ${acc.currency}`}\n         </option>\n      ));\n\n      return (\n         <div className=\"row\">\n            <div className=\"col-sm-8 offset-sm-2 col-md-6 offset-md-3\">\n               <section className=\"module new-transfer\">\n                  <h1>New transfer</h1>\n\n                  <Form\n                     userId={this.props.userId}\n                     userAccountsList={userAccountsList}\n                     firstAccId={firstAccId}\n                     addTransfer={this.props.addTransfer}\n                  />\n               </section>\n            </div>\n         </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      accounts: state.accounts.data,\n      userId: state.profile.data._id\n   };\n};\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      addTransfer: data => dispatch(actions.addTransfer(data))\n   };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTransfer);\n"]},"metadata":{},"sourceType":"module"}