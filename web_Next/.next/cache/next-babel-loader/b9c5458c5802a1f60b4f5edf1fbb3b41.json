{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStats } from 'api/stats';\nimport Loader from 'components/UI/Loader';\nimport IncomeChart from '../Charts/IncomeChart';\n\nclass IncomeStats extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      accDetails: {},\n      chartData: [],\n      loaded: false\n    });\n  }\n\n  // Get account stats for the last 30 days\n  // For the first user's account\n  componentDidMount() {\n    getStats(this.props.firstAccount._id, 30).then(({\n      accDetails,\n      data\n    }) => {\n      this.setState({\n        accDetails,\n        chartData: data,\n        loaded: true\n      });\n    }).catch(err => this.setState({\n      loaded: false\n    }));\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return __jsx(Loader, null);\n    } else {\n      return __jsx(\"section\", {\n        className: \"module stats-widget\"\n      }, __jsx(\"h3\", null, \"Income change stats (30 days)\"), __jsx(\"p\", null, __jsx(\"strong\", null, this.state.accDetails.type, \" account\"), ' / ', this.state.accDetails.currency.toUpperCase(), ' / ', this.state.accDetails.number), __jsx(IncomeChart, {\n        data: this.state.chartData\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    firstAccount: state.accounts.data[0]\n  };\n};\n\nexport default connect(mapStateToProps)(IncomeStats);","map":{"version":3,"sources":["/Users/binduraj/Documents/GitHub/dollarbank/web_Next/components/components/Widgets/IncomeStats/index.js"],"names":["React","Component","connect","getStats","Loader","IncomeChart","IncomeStats","accDetails","chartData","loaded","componentDidMount","props","firstAccount","_id","then","data","setState","catch","err","render","state","type","currency","toUpperCase","number","mapStateToProps","accounts"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCACzB;AACLM,MAAAA,UAAU,EAAE,EADP;AAELC,MAAAA,SAAS,EAAE,EAFN;AAGLC,MAAAA,MAAM,EAAE;AAHH,KADyB;AAAA;;AAOjC;AACA;AACAC,EAAAA,iBAAiB,GAAG;AACjBP,IAAAA,QAAQ,CAAC,KAAKQ,KAAL,CAAWC,YAAX,CAAwBC,GAAzB,EAA8B,EAA9B,CAAR,CACIC,IADJ,CACS,CAAC;AAAEP,MAAAA,UAAF;AAAcQ,MAAAA;AAAd,KAAD,KAA0B;AAC7B,WAAKC,QAAL,CAAc;AAAET,QAAAA,UAAF;AAAcC,QAAAA,SAAS,EAAEO,IAAzB;AAA+BN,QAAAA,MAAM,EAAE;AAAvC,OAAd;AACF,KAHJ,EAIIQ,KAJJ,CAIUC,GAAG,IAAI,KAAKF,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAE;AAAV,KAAd,CAJjB;AAKF;;AAEDU,EAAAA,MAAM,GAAG;AACN,QAAI,CAAC,KAAKC,KAAL,CAAWX,MAAhB,EAAwB;AACrB,aAAO,MAAC,MAAD,OAAP;AACF,KAFD,MAEO;AACJ,aACG;AAAS,QAAA,SAAS,EAAC;AAAnB,SACG,kDADH,EAEG,iBACG,sBAAS,KAAKW,KAAL,CAAWb,UAAX,CAAsBc,IAA/B,aADH,EAEI,KAFJ,EAGI,KAAKD,KAAL,CAAWb,UAAX,CAAsBe,QAAtB,CAA+BC,WAA/B,EAHJ,EAII,KAJJ,EAKI,KAAKH,KAAL,CAAWb,UAAX,CAAsBiB,MAL1B,CAFH,EAUG,MAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWZ;AAA9B,QAVH,CADH;AAcF;AACH;;AApCgC;;AAuCpC,MAAMiB,eAAe,GAAGL,KAAK,IAAI;AAC9B,SAAO;AACJR,IAAAA,YAAY,EAAEQ,KAAK,CAACM,QAAN,CAAeX,IAAf,CAAoB,CAApB;AADV,GAAP;AAGF,CAJD;;AAMA,eAAeb,OAAO,CAACuB,eAAD,CAAP,CAAyBnB,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getStats } from 'api/stats';\n\nimport Loader from 'components/UI/Loader';\nimport IncomeChart from '../Charts/IncomeChart';\n\nclass IncomeStats extends Component {\n   state = {\n      accDetails: {},\n      chartData: [],\n      loaded: false\n   };\n\n   // Get account stats for the last 30 days\n   // For the first user's account\n   componentDidMount() {\n      getStats(this.props.firstAccount._id, 30)\n         .then(({ accDetails, data }) => {\n            this.setState({ accDetails, chartData: data, loaded: true });\n         })\n         .catch(err => this.setState({ loaded: false }));\n   }\n\n   render() {\n      if (!this.state.loaded) {\n         return <Loader />;\n      } else {\n         return (\n            <section className=\"module stats-widget\">\n               <h3>Income change stats (30 days)</h3>\n               <p>\n                  <strong>{this.state.accDetails.type} account</strong>\n                  {' / '}\n                  {this.state.accDetails.currency.toUpperCase()}\n                  {' / '}\n                  {this.state.accDetails.number}\n               </p>\n\n               <IncomeChart data={this.state.chartData} />\n            </section>\n         );\n      }\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      firstAccount: state.accounts.data[0]\n   };\n};\n\nexport default connect(mapStateToProps)(IncomeStats);\n"]},"metadata":{},"sourceType":"module"}